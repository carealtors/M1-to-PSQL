services:
  db:
    build:
      context: ./db
    container_name: my-custom-postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER}", "-d", "${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  api:
    build:
      context: ./api
    container_name: flask-api
    environment:
      FLASK_DEBUG: ${FLASK_DEBUG}       # Enable debug mode
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
    ports:
      - "${FLASK_PORT}:5000"
    depends_on:
      - db
    volumes:
      - ./api:/app
    command: python run.py

  frontend:
    build:
      context: ./frontend
    container_name: react-frontend
    environment:
      - CHOKIDAR_USEPOLLING=true  # Necessary for some Docker environments
      - NODE_ENV=development
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - api

  processor:
    build:
      context: ./processor
    container_name: data-processor
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      M1_DATA_DIR: ${M1_DATA_DIR}
      ACH_DATA_DIR: ${ACH_DATA_DIR}
      PROCESS_M1: ${PROCESS_M1}
      PROCESS_ACH: ${PROCESS_ACH}
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./m1-data:${M1_DATA_DIR}
      - ./ach-data:${ACH_DATA_DIR}
    command: python process_files.py

volumes:
  pgdata:
    driver: local
